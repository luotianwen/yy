<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd ">

	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.shifeng">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 标注类型 的事务配置 如果使用注解事务。-->
 	<tx:annotation-driven />
	<!-- 启用注解 -->
	<context:annotation-config />	
	
 	<!-- 导入properties文件 -->
	<import resource="spring-properties.xml"/>
	
	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${jdbc.url}" />  
         <property name="username" value="${jdbc.username}" />  
         <property name="password" value="${jdbc.password}" />  
         <property name="driverClassName" value="${jdbc.driverClassName}" />  
         <property name="filters" value="${jdbc.filters}" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${jdbc.maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${jdbc.initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${jdbc.maxWait}" />
       <!--   最小空闲连接数 -->
         <property name="minIdle" value="${jdbc.minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <!--  配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${jdbc.validationQuery}" />  
         <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
         <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
         <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志    -->
         <property name="logAbandoned" value="${jdbc.logAbandoned}" />
         <!-- 解密数据库密码 -->   
         <property name="connectionProperties" value="config.decrypt=true" />
	</bean>
	
	<!-- 配置分页插件 -->
     <bean id="pagePlugin" class="com.shifeng.plugin.page.PagePlugin">
		<property name="properties">
			<props>
			<!-- oracle/mysql/sqlserver -->
				<prop key="dialect">mysql</prop>
				<prop key="pageSqlId">.*Page.*</prop>
			</props>
		</property>
	 </bean>

	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
    	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*Mapper.xml" />
        <!-- 注入分页插件 -->
        <property name="plugins">
			<array>
				<ref bean="pagePlugin" />
			</array>
		</property>
    </bean>
	 
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	 <!-- AOP配置数据事务管理，也可以采用注解方式，也可以写在LoggerAspect里面 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="insert*"  propagation="REQUIRED"/>
			<tx:method name="update*"  propagation="REQUIRED"/>
			<tx:method name="delete*"  propagation="REQUIRED"/>
			<tx:method name="find*"  propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*"  propagation="SUPPORTS" read-only="true"/>
			<tx:method name="get*"  propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 事物处理 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.shifeng.*.service..*(..))" />
	</aop:config>

	<import resource="spring-dubbox.xml"/>
	<import resource="spring-solr.xml"/>

</beans>
